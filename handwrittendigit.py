# -*- coding: utf-8 -*-
"""HandwrittenDigit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GXcE60zsQn9EYSuF1Xa1clw6_316K5yq
"""

#Import Some Layers and Dataset

from keras.layers import Dense
import tensorflow as tf
mnist = tf.keras.datasets.mnist

(x_train,y_train),(x_test,y_test)=mnist.load_data()

#Checking amount of data and data shape

print(x_train.shape)
print(x_test.shape)

#Building of Model"""

model = tf.keras.models.Sequential([
    tf.keras.layers.Dense(128,activation='relu'),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dense(32,activation='relu'),
    tf.keras.layers.Dense(10,activation='softmax')
])

#"""Compiling of Model"""

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

#"""Model fit and evaluate"""

model.fit(x_train,y_train, epochs=10, batch_size=32, verbose=1)
model.evaluate(x_test,y_test, verbose=1)

predicted = model.predict(x_test)
import matplotlib.pyplot as plt
import numpy as np
plt.figure(figsize=(10,10))
for i in range(25):
  plt.subplot(5,5,i+1)
  plt.xticks([])
  plt.yticks([])
  plt.grid(False)
  plt.imshow(x_test[i],cmap=plt.cm.binary)
  plt.xlabel("real="+str(y_test[i])+"predicted"+str(np.argmax(predicted[i])))
plt.show()

